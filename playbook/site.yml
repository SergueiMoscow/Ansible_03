---
# Playbook для установки Clickhouse и Vector на серверах, управляемых Ansible

# Clickhouse
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    # Задача для загрузки и установки Clickhouse
    - name: Download and install Clickhouse
      block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
            mode: '0644'
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: '0644'
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
        disable_gpg_check: true

      notify: Start clickhouse service
    - name: Flush handlers
      ansible.builtin.meta: flush_handlers
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0

# Vector
- name: Install vector
  hosts: vector
  handlers:
    - name: Start vector service
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted

  tasks:
    - name: Download repo
    # doc: https://vector.dev/docs/setup/installation/package-managers/yum/
      ansible.builtin.get_url:
        url: "https://setup.vector.dev"
        dest: "./vector"
        mode: "0755"

    - name: Add vector repo
      become: true
      ansible.builtin.shell: "./vector > /vector.txt"
      args:
        creates: "/vector.txt"

    - name: Install vector
      become: true
      ansible.builtin.yum:
        name: vector


    - name: Create vector service
      become: true
      ansible.builtin.template:
        src: vector.service.j2
        dest: /usr/lib/systemd/system/vector.service
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        backup: true

    - name: Create vector configuration
      become: true
      ansible.builtin.template:
        src: vector.config.j2
        dest: "{{ vector_config_dir }}/{{ vector_config_file }}"
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"

# Lighthouse with Nginx
- name: Install Lighthouse
  hosts: lighthouse
  handlers:
    - name: Reload nginx on VM
      become: true
      ansible.builtin.service:
        name: nginx
        state: restarted
      when: ansible_connection != "docker"
    - name: Reload nginx in container
      ansible.builtin.command: "nginx -s reload"
      when: ansible_connection == "docker"
      changed_when: false
  pre_tasks:
    - name: Lighthouse | Install git
      become: true
      ansible.builtin.yum:
        name: git
        state: present
    - name: NGNIX | Install epel-release
      become: true
      ansible.builtin.yum:
        name: epel-release
        state: present
    - name: NGINX | Install Nginx
      become: true
      ansible.builtin.yum:
        name: nginx
        state: present
    - name: NGINX | General config
      become: true
      ansible.builtin.template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        mode: '0644'
    - name: NGINX | Start in container
      ansible.builtin.command: nginx
      when: ansible_connection == "docker"
      register: nginx_start_result
      changed_when: false
      failed_when: "nginx_start_result.rc not in [0, 1]"
  tasks:
    - name: Lighthouse | Copy from git
      become: true
      ansible.builtin.git:
        repo: "{{ lighthouse_git }}"
        version: master
        dest: "{{ lighthouse_dir }}"
      notify:
        - Reload nginx on VM
        - Reload nginx in container
    # - name: Lighthouse | Create config
    #   become: true
    #   template:
    #     src: templates/lighthouse.conf.j2
    #     dest: /etc/nginx/conf.d/lighthouse.conf
    #     mode: '0644'
